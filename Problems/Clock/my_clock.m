function my_clock()

time = clock;
hour = mod(time(4)-1, 12)+1;
minute = time(5);
second = time(6);


s = linspace(0,2*pi, 500);

% making a new figure
screenSize = get(0, 'ScreenSize');
screenSize(1:2) = [];
handles.fig = figure(...
    'MenuBar', 'no',...
    'Color', [1, 1, 1],...
    'Name', 'Clock',...
    'NumberTitle', 'off',...
    'NextPlot', 'add',...
    'Position', [(screenSize-500*[1, 1])/2, 500*[1, 1]],...
    'CloseRequestFcn', {@close, })

% new axes
axes('Visible', 'off',...
     'DataAspectRatio', [1 1 1],...
     'NextPlot', 'add',...
     'XLim', 1.1*[-1, 1],...
     'YLim', 1.1*[-1, 1])

% big disk
patch(...
    'XData', cos(s),...
    'YData', sin(s),...
    'FaceColor', 0.75*[1, 1, 0],...
    'EdgeColor', 0.3*[1, 1, 0],...
    'LineWidth', 5)

% curves ornaments
plot((0.85+0.08*cos(24*s)).*sin(s), (0.85+0.08*cos(24*s)).*cos(s),...
    'Color', [1, 1, 1],...
    'LineWidth', 1.5)

%
patch(...
    'XData', 0.7*cos(s),...
    'YData', 0.7*sin(s),...
    'FaceColor', 0.7*[1, 1, 0],...
    'EdgeColor', 'none')

% numbers
circle = @(c, r) patch(...
    'XData', c(1) + r*cos(s),...
    'YData', c(2) + r*sin(s),...
    'FaceColor', 0.4*[1, 1, 0],...
    'EdgeColor', [1, 1, 1],...
    'LineWidth', 2);
h = 1:12;
th = linspace(0, 2*pi, 13) - pi/3;
th(end) = [];
for  i = 1:12
    circle(0.85*[cos(th(i)), -sin(th(i))], 0.1)
    text(...
        'Position', 0.85*[cos(th(i)), -sin(th(i))],...
        'String', num2str(h(i)),...
        'Color', [1, 1, 1],...
        'FontWeight', 'bold',...
        'FontName', 'Times',...
        'FontSize', 16,...
        'VerticalAlignment', 'middle',...
        'HorizontalAlignment', 'center')
end


rot = @(t, u) [cos(t), -sin(t); sin(t), cos(t)]*u;

% minute hand
xdata = [0.08, 0.01, -0.01, -0.08];
ydata = 0.8*[0, 1, 1, 0];
min_pos = -2*pi*(minute/60 + second/60/60);
rot_data = rot(min_pos, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);
handles.min = patch(...
    'XData', xdata,...
    'YData', ydata,...
    'FaceColor', 0.5*[1, 1, 0],...
    'EdgeColor', 'none');

patch(...
    'XData', 0.08*cos(s),...
    'YData', 0.08*sin(s),...
    'FaceColor', 0.5*[1, 1, 0],...
    'EdgeColor', 'none')

% hour hand
xdata = [0.05, 0.01, -0.01, -0.05];
ydata = 0.6*[0, 1, 1, 0];
hour_hand = -2*pi*(hour/12+minute/60/12);
rot_data = rot(hour_hand, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);
handles.hour = patch(...
    'XData', xdata,...
    'YData', ydata,...
    'FaceColor', 0.3*[1, 1, 0],...
    'EdgeColor', 'none');
patch(...
    'XData', 0.05*cos(s),...
    'YData', 0.05*sin(s),...
    'FaceColor', 0.3*[1, 1, 0],...
    'EdgeColor', 'none')

% second hand
xdata = [0, 0];
ydata = [0, 0.7];
second_hand = -2*pi*second/60;
rot_data = rot(second_hand, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);

handles.sec = line(...
    'Color', [1, 1, 1],...
    'LineWidth', 3,...
    'XData', xdata,...
    'YData', ydata);

% centre disk
patch(...
    'XData', 0.03*cos(s),...
    'YData', 0.03*sin(s),...
    'FaceColor', 0.1*[1, 1, 0],...
    'EdgeColor', 'none')


handles.timer = timer(...
    'Period', 0.25,...
    'ExecutionMode', 'FixedSpacing',...
    'TimerFcn', {@set_clock, handles});

set(handles.fig,...
    'CloseRequestFcn', {@close_fig, handles});
    function close_fig(~, ~, handles)
        stop(handles.timer)
        close force
    end
start(handles.timer)


end

function set_clock(~, ~, handles)
time = clock;
hour = mod(time(4)-1, 12)+1;
minute = time(5);
second = time(6);

rot = @(t, u) [cos(t), -sin(t); sin(t), cos(t)]*u;

% minute hand
xdata = [0.08, 0.01, -0.01, -0.08];
ydata = 0.8*[0, 1, 1, 0];
min_pos = -2*pi*(minute/60 + second/60/60);
rot_data = rot(min_pos, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);

set(handles.min,...
    'XData', xdata,...
    'YData', ydata)

% hour hand
xdata = [0.05, 0.01, -0.01, -0.05];
ydata = 0.6*[0, 1, 1, 0];
hour_hand = -2*pi*(hour/12+minute/60/12);
rot_data = rot(hour_hand, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);

set(handles.hour,...
    'XData', xdata,...
    'YData', ydata)

% second hand
xdata = [0, 0];
ydata = [0, 0.7];
second_hand = -2*pi*second/60;
rot_data = rot(second_hand, [xdata;ydata]);
xdata = rot_data(1,:);
ydata = rot_data(2,:);

set(handles.sec,...
    'XData', xdata,...
    'YData', ydata)
end

